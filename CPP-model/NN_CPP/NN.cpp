#include "NN.h"

void NN(din_t U0,din_t U1,din_t U2,dout_t *Y0,dout_t *Y1){

	const dout_t tanh[128] = {
	0.0000000000000000000000000,
	0.2449186624037091308814240,
	0.4621171572600097365857152,
	0.6351489523872873022014574,
	0.7615941559557648510292438,
	0.8482836399575128805139457,
	0.9051482536448663962502792,
	0.9413755384972873896387568,
	0.9640275800758169033599643,
	0.9780261147388136233615796,
	0.9866142981514303134105148,
	0.9918597245682077012673972,
	0.9950547536867304643237730,
	0.9969976354865259793314181,
	0.9981778976111986834141021,
	0.9988944427261527980732581,
	0.9993292997390670340251972,
	0.9995931460438896021258870,
	0.9997532108480274848361091,
	0.9998503075449787225181808,
	0.9999092042625951082257529,
	0.9999449286177708451361923,
	0.9999665971563037603075941,
	0.9999797400180382433987347,
	0.9999877116507955854274314,
	0.9999925467214316743280733,
	0.9999954793514042039603851,
	0.9999972580855862602788875,
	0.9999983369439446878601530,
	0.9999989913051835488388974,
	0.9999993881955461239030569,
	0.9999996289217962797124528,
	0.9999997749296758442483224,
	0.9999998634879417869214535,
	0.9999999172012490333827373,
	0.9999999497800181602613634,
	0.9999999695400410004708647,
	0.9999999815251008339345162,
	0.9999999887944072129997153,
	0.9999999932034643324030299,
	0.9999999958776927266868029,
	0.9999999974996942597726957,
	0.9999999984834878619111009,
	0.9999999990801888838376499,
	0.9999999994421063798100136,
	0.9999999996616204533950167,
	0.9999999997947623953109542,
	0.9999999998755171315423240,
	0.9999999999244972848089219,
	0.9999999999542052986356566,
	0.9999999999722241073030204,
	0.9999999999831530317351280,
	0.9999999999897818403482574,
	0.9999999999938024020096350,
	0.9999999999962408958609217,
	0.9999999999977200459966298,
	0.9999999999986171062005269,
	0.9999999999991612265048957,
	0.9999999999994912958101168,
	0.9999999999996914690214567,
	0.9999999999998128163980482,
	0.9999999999998865352068833,
	0.9999999999999311661724732,
	0.9999999999999582556142741,
	0.9999999999999746869150385,
	0.9999999999999846789222602,
	0.9999999999999906741265931,
	0.9999999999999943378625744,
	0.9999999999999965583086237,
	0.9999999999999978905762532,
	0.9999999999999987787546729,
	0.9999999999999992228438828,
	0.9999999999999995559107901,
	0.9999999999999996669330926,
	0.9999999999999997779553951,
	0.9999999999999998889776975,
	0.9999999999999998889776975,
	1.0000000000000000000000000,
	1.0000000000000000000000000,
	1.0000000000000000000000000,
	1.0000000000000000000000000,
	1.0000000000000000000000000,
	1.0000000000000000000000000,
	1.0000000000000000000000000,
	1.0000000000000000000000000,
	1.0000000000000000000000000,
	1.0000000000000000000000000,
	1.0000000000000000000000000,
	1.0000000000000000000000000,
	1.0000000000000000000000000,
	1.0000000000000000000000000,
	1.0000000000000000000000000,
	1.0000000000000000000000000,
	1.0000000000000000000000000,
	1.0000000000000000000000000,
	1.0000000000000000000000000,
	1.0000000000000000000000000,
	1.0000000000000000000000000,
	1.0000000000000000000000000,
	1.0000000000000000000000000,
	1.0000000000000000000000000,
	1.0000000000000000000000000,
	1.0000000000000000000000000,
	1.0000000000000000000000000,
	1.0000000000000000000000000,
	1.0000000000000000000000000,
	1.0000000000000000000000000,
	1.0000000000000000000000000,
	1.0000000000000000000000000,
	1.0000000000000000000000000,
	1.0000000000000000000000000,
	1.0000000000000000000000000,
	1.0000000000000000000000000,
	1.0000000000000000000000000,
	1.0000000000000000000000000,
	1.0000000000000000000000000,
	1.0000000000000000000000000,
	1.0000000000000000000000000,
	1.0000000000000000000000000,
	1.0000000000000000000000000,
	1.0000000000000000000000000,
	1.0000000000000000000000000,
	1.0000000000000000000000000,
	1.0000000000000000000000000,
	1.0000000000000000000000000,
	1.0000000000000000000000000,
	1.0000000000000000000000000,
	1.0000000000000000000000000};
#pragma HLS ARRAY_PARTITION variable=tanh complete dim=1

	const dout_t b[12] = {
	0.814723686393179,0.905791937075619,0.126986816293506,0.913375856139019,
	0.632359246225410,0.0975404049994095,0.278498218867048,0.546881519204984,
	0.957506835434298,0.964888535199277,0.157613081677548,0.970592781760616
	};
#pragma HLS ARRAY_PARTITION variable=b complete dim=1

	const dout_t c[8] = {
	3.756335296528265,4.454516262678995,1.275475577296345,4.796457126027220,
	2.529785258325710,2.736077649819015,3.495383613283430,0.693122214143395
	};
#pragma HLS ARRAY_PARTITION variable=c complete dim=1




	static dout_t x[4];
	static counter n;
	dout_t temp0;
	dout_t temp1;
	dout_t temp2;
	dout_t temp3;

	dout_t y0_t;
	dout_t y1_t;


	din_t w0,w1,w2,w3;
	din_t w4,w5,w6,w7;
	din_t w8,w9,w10,w11;
	din_t w12,w13,w14,w15;

	read_w(n,&w0,&w1,&w2,&w3,&w4,&w5,&w6,&w7,&w8,&w9,&w10,&w11,&w12,&w13,&w14,&w15);


	y0_t = (c[0]*x[0] + c[2]*x[1] + c[4]*x[2] + c[6]*x[3]);
	y1_t = (c[1]*x[0] + c[3]*x[1] + c[5]*x[2] + c[7]*x[3]);

	*Y0 = y0_t;
	*Y1 = y1_t;

	temp0 = (w0)*x[0] + (w4)*x[1] + (w8) *x[2] + (w12)*x[3];
	temp1 = (w1)*x[0] + (w5)*x[1] + (w9) *x[2] + (w13)*x[3];
	temp2 = (w2)*x[0] + (w6)*x[1] + (w10)*x[2] + (w14)*x[3];
	temp3 = (w3)*x[0] + (w7)*x[1] + (w11)*x[2] + (w15)*x[3];

	if(n == 0){
		x[3] = b[3]*U0 + b[7]*U1 + b[11]*U2;
		x[2] = b[2]*U0 + b[6]*U1 + b[10]*U2;
		x[1] = b[1]*U0 + b[5]*U1 + b[9]*U2;
		x[0] = b[0]*U0 + b[4]*U1 + b[8]*U2;
	}else{
		x[3] = tanh[temp3.range(17,11)]+b[3]*U0 + b[7]*U1 + b[11]*U2;
		x[2] = tanh[temp2.range(17,11)]+b[2]*U0 + b[6]*U1 + b[10]*U2;
		x[1] = tanh[temp1.range(17,11)]+b[1]*U0 + b[5]*U1 + b[9]*U2;
		x[0] = tanh[temp0.range(17,11)]+b[0]*U0 + b[4]*U1 + b[8]*U2;
	}

	if(n == 3){
		n = 0;
	}else{
		n++;
	}

#ifndef __SYNTHESIS__
	std::cout << "n = " << n << std::endl;
	std::cout << "U0 = " << U0 << std::endl;
	std::cout << "U1 = " << U1 << std::endl;
	std::cout << "U2 = " << U2 << std::endl;
//	std::cout << "t0 = " << temp0 << std::endl;
//	std::cout << "t1 = " << temp1 << std::endl;
//	std::cout << "t2 = " << temp2 << std::endl;
//	std::cout << "t3 = " << temp3 << std::endl;
	std::cout << "x0 = " << x[0] << std::endl;
	std::cout << "x1 = " << x[1] << std::endl;
	std::cout << "x2 = " << x[2] << std::endl;
	std::cout << "x3 = " << x[3] << std::endl;
	std::cout << "y0  = " << *Y0    << std::endl;
	std::cout << "y1  = " << *Y1    << std::endl;
	std::cout << "***************************************************" << std::endl;

#endif

}
void read_w(counter n,
		    din_t *w0,din_t *w1,din_t *w2,din_t *w3,
			din_t *w4,din_t *w5,din_t *w6,din_t *w7,
			din_t *w8,din_t *w9,din_t *w10,din_t *w11,
			din_t *w12,din_t *w13,din_t *w14,din_t *w15){
	const dout_t w[64] ={
	0.0000000000000000000000000,
	0.0000000000000000000000000,
	0.0000000000000000000000000,
	0.0000000000000000000000000,
	0.0000000000000000000000000,
	0.0000000000000000000000000,
	0.0000000000000000000000000,
	0.0000000000000000000000000,
	0.0000000000000000000000000,
	0.0000000000000000000000000,
	0.0000000000000000000000000,
	0.0000000000000000000000000,
	0.0000000000000000000000000,
	0.0000000000000000000000000,
	0.0000000000000000000000000,
	0.0000000000000000000000000,
	9.5716694824294599186487176,
	4.8537564872284102435173736,
	8.0028046888880002285304727,
	1.4188633862721500289438836,
	4.2176128262627496923187209,
	9.1573552518906691233269157,
	7.9220732955955401877190525,
	9.5949242639290304168753210,
	6.5574069915658697027538437,
	0.3571167857418960367432703,
	8.4912930586877699568049138,
	9.3399324775755090399798064,
	6.7873515485777407008072259,
	7.5774013057833302653421015,
	7.4313246812491593473737339,
	3.9222701953416798659191045,
	6.5547789017755695439859664,
	1.7118668781156198832604787,
	7.0604608801960901942607052,
	0.3183284637742069822508029,
	2.7692298496089002846076710,
	0.4617139063115389685520995,
	0.9713178123584749190655430,
	8.2345782832729295108720180,
	6.9482862297581702293314265,
	3.1709948006086103866607573,
	9.5022204883835499344968412,
	0.3444608050290880463251142,
	4.3874435965639797530002397,
	3.8155845709300799661889414,
	7.6551678814900201430759807,
	7.9519990113706295886686348,
	1.8687260455437901818243063,
	4.8976439578823098841553474,
	4.4558620071090002667801855,
	6.4631301011126494060476944,
	7.0936483085807298110125885,
	7.5468668198236095179254335,
	2.7602507699857796730213977,
	6.7970267685367504739701872,
	6.5509800397384099213127229,
	1.6261173519463101300175367,
	1.1899768155837699978860655,
	4.9836405198214297485037605,
	9.5974395851608100826979353,
	3.4038572666613298167703761,
	5.8526775097977701278750828,
	2.2381193949113700192299348};
	#pragma HLS ARRAY_PARTITION variable=w complete dim=1


	if(n == 0){
		*w0 = w[0];
		*w1 = w[1];
		*w2 = w[2];
		*w3 = w[3];
		*w4 = w[4];
		*w5 = w[5];
		*w6 = w[6];
		*w7 = w[7];
		*w8 = w[8];
		*w9 = w[9];
		*w10 = w[10];
		*w11 = w[11];
		*w12 = w[12];
		*w13 = w[13];
		*w14 = w[14];
		*w15 = w[15];
	}else if(n == 1){
		*w0 = w[16];
		*w1 = w[17];
		*w2 = w[18];
		*w3 = w[19];
		*w4 = w[20];
		*w5 = w[21];
		*w6 = w[22];
		*w7 = w[23];
		*w8 = w[24];
		*w9 = w[25];
		*w10 = w[26];
		*w11 = w[27];
		*w12 = w[28];
		*w13 = w[29];
		*w14 = w[30];
		*w15 = w[31];
	}else if(n == 2){
		*w0 = w[32];
		*w1 = w[33];
		*w2 = w[34];
		*w3 = w[35];
		*w4 = w[36];
		*w5 = w[37];
		*w6 = w[38];
		*w7 = w[39];
		*w8 = w[40];
		*w9 = w[41];
		*w10 = w[42];
		*w11 = w[43];
		*w12 = w[44];
		*w13 = w[45];
		*w14 = w[46];
		*w15 = w[47];
	}else{
		*w0 = w[48];
		*w1 = w[49];
		*w2 = w[50];
		*w3 = w[51];
		*w4 = w[52];
		*w5 = w[53];
		*w6 = w[54];
		*w7 = w[55];
		*w8 = w[56];
		*w9 = w[57];
		*w10 = w[58];
		*w11 = w[59];
		*w12 = w[60];
		*w13 = w[61];
		*w14 = w[62];
		*w15 = w[63];
	}
}
