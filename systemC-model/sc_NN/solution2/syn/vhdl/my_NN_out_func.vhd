-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.1
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity my_NN_out_func is
port (
    Y0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    Y0_ap_vld : OUT STD_LOGIC;
    Y1 : OUT STD_LOGIC_VECTOR (17 downto 0);
    Y1_ap_vld : OUT STD_LOGIC;
    x0 : IN STD_LOGIC_VECTOR (17 downto 0);
    x1 : IN STD_LOGIC_VECTOR (17 downto 0);
    x2 : IN STD_LOGIC_VECTOR (17 downto 0);
    x3 : IN STD_LOGIC_VECTOR (17 downto 0);
    my_NN_c_0_V : IN STD_LOGIC_VECTOR (17 downto 0);
    my_NN_c_1_V : IN STD_LOGIC_VECTOR (17 downto 0);
    my_NN_c_2_V : IN STD_LOGIC_VECTOR (17 downto 0);
    my_NN_c_3_V : IN STD_LOGIC_VECTOR (17 downto 0);
    my_NN_c_4_V : IN STD_LOGIC_VECTOR (17 downto 0);
    my_NN_c_5_V : IN STD_LOGIC_VECTOR (17 downto 0);
    my_NN_c_6_V : IN STD_LOGIC_VECTOR (17 downto 0);
    my_NN_c_7_V : IN STD_LOGIC_VECTOR (17 downto 0) );
end;


architecture behav of my_NN_out_func is 
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";

    signal grp_fu_688_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_719_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal p_Val2_1_fu_673_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_666_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_680_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal p_Val2_8_fu_704_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_697_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal grp_fu_711_p3 : STD_LOGIC_VECTOR (29 downto 0);

    component my_NN_mac_muladd_fYi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (17 downto 0);
        din2 : IN STD_LOGIC_VECTOR (29 downto 0);
        dout : OUT STD_LOGIC_VECTOR (29 downto 0) );
    end component;


    component my_NN_mul_mul_18sg8j IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (17 downto 0);
        dout : OUT STD_LOGIC_VECTOR (29 downto 0) );
    end component;



begin
    my_NN_mac_muladd_fYi_U263 : component my_NN_mac_muladd_fYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 18,
        din2_WIDTH => 30,
        dout_WIDTH => 30)
    port map (
        din0 => x0,
        din1 => my_NN_c_0_V,
        din2 => p_Val2_1_fu_673_p2,
        dout => grp_fu_666_p3);

    my_NN_mul_mul_18sg8j_U264 : component my_NN_mul_mul_18sg8j
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 18,
        dout_WIDTH => 30)
    port map (
        din0 => x1,
        din1 => my_NN_c_2_V,
        dout => p_Val2_1_fu_673_p2);

    my_NN_mac_muladd_fYi_U265 : component my_NN_mac_muladd_fYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 18,
        din2_WIDTH => 30,
        dout_WIDTH => 30)
    port map (
        din0 => x2,
        din1 => my_NN_c_4_V,
        din2 => grp_fu_666_p3,
        dout => grp_fu_680_p3);

    my_NN_mac_muladd_fYi_U266 : component my_NN_mac_muladd_fYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 18,
        din2_WIDTH => 30,
        dout_WIDTH => 30)
    port map (
        din0 => x3,
        din1 => my_NN_c_6_V,
        din2 => grp_fu_680_p3,
        dout => grp_fu_688_p3);

    my_NN_mac_muladd_fYi_U267 : component my_NN_mac_muladd_fYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 18,
        din2_WIDTH => 30,
        dout_WIDTH => 30)
    port map (
        din0 => x0,
        din1 => my_NN_c_1_V,
        din2 => p_Val2_8_fu_704_p2,
        dout => grp_fu_697_p3);

    my_NN_mul_mul_18sg8j_U268 : component my_NN_mul_mul_18sg8j
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 18,
        dout_WIDTH => 30)
    port map (
        din0 => x1,
        din1 => my_NN_c_3_V,
        dout => p_Val2_8_fu_704_p2);

    my_NN_mac_muladd_fYi_U269 : component my_NN_mac_muladd_fYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 18,
        din2_WIDTH => 30,
        dout_WIDTH => 30)
    port map (
        din0 => x2,
        din1 => my_NN_c_5_V,
        din2 => grp_fu_697_p3,
        dout => grp_fu_711_p3);

    my_NN_mac_muladd_fYi_U270 : component my_NN_mac_muladd_fYi
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 18,
        din1_WIDTH => 18,
        din2_WIDTH => 30,
        dout_WIDTH => 30)
    port map (
        din0 => x3,
        din1 => my_NN_c_7_V,
        din2 => grp_fu_711_p3,
        dout => grp_fu_719_p3);




    Y0 <= grp_fu_688_p3(29 downto 12);
    Y0_ap_vld <= ap_const_logic_1;
    Y1 <= grp_fu_719_p3(29 downto 12);
    Y1_ap_vld <= ap_const_logic_1;
end behav;
